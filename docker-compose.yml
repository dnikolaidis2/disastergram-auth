version: '3.7'

services:
  auth:
    build: .
    image: dnikolaidis/disastergram-auth:latest
    environment:
      POSTGRES_HOST: auth-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: disastergram
      BASEURL: http://localhost:5000/
      DOCKER_HOST: auth:5000
    ports:
    - "5000:5000"
    networks:
      - auth-net
      - zoo-net
    depends_on:
      - auth-db
      - zoo1
      - zoo2
      - zoo3

  # https://hub.docker.com/_/postgres
  auth-db:
    image: postgres:11
    restart: always
    environment:
      POSTGRES_PASSWORD: disastergram
    volumes:
      - auth-data:/var/lib/postgresql/
    networks:
      - auth-net

  zoo1:
    image: zookeeper
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      - zoo-net
    
  zoo2:
    image: zookeeper
    restart: always
    hostname: zoo2
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
    networks:
      - zoo-net
    
  zoo3:
    image: zookeeper
    restart: always
    hostname: zoo3
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
    networks:
      - zoo-net
    
networks:
  auth-net:
  zoo-net:

volumes:
  auth-data:
